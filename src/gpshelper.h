#ifndef gpshelper_h
#define gpshelper_h

#define NMEAGPS_PARSE_PROPRIETARY
#define NMEAGPS_DERIVED_TYPES

#include <Arduino.h>
#include <ublox/ubxGPS.h>
// #include <NMEAGPS.h>
// #include <GPSport.h>

#include <SoftwareSerial.h>
#include "pinouthelper.h"
// SoftwareSerial gpsPort(SOFTSER_RX,SOFTSER_TX, false, 256); // Rx = D2 ,Tx = D1
// // SoftwareSerial gpsPort(13,15, false, 256); // Rx = D7 ,Tx = D8
// #define GPS_PORT_NAME "gpsPort"
// #define DEBUG_PORT Serial

extern SoftwareSerial gpsPort;

// extern NMEAGPS gps; // This parses the GPS characters
extern ubloxGPS gps;
extern gps_fix fix;
extern unsigned long BAUD_GPS;

extern uint8_t ubloxClassID;
extern bool PPS;

enum enumGpsPortMode
{
    relaying,
    echoing,
    gpsPortModeCount
};

enum enumSentence
{
    NMEA,
    UBLOX,
    sentenceCount
};

enum enumClassID
{
    NAV_PVT,
    NAV_CLOCK,
    TIM_TP,
    ClassIDUnknown
};

// U-blox UBX binary commands

const unsigned char ubxRate1Hz[] PROGMEM =
    {0x06, 0x08, 0x06, 0x00, 0xE8, 0x03, 0x01, 0x00, 0x01, 0x00};
const unsigned char ubxRate2Hz[] PROGMEM =
    {0x06, 0x08, 0x06, 0x00, 0xF4, 0x01, 0x01, 0x00, 0x01, 0x00};
const unsigned char ubxRate3Hz[] PROGMEM =
    {0x06, 0x08, 0x06, 0x00, 0x4D, 0x01, 0x01, 0x00, 0x01, 0x00};
const unsigned char ubxRate4Hz[] PROGMEM =
    {0x06, 0x08, 0x06, 0x00, 0xFA, 0x00, 0x01, 0x00, 0x01, 0x00};
const unsigned char ubxRate5Hz[] PROGMEM =
    {0x06, 0x08, 0x06, 0x00, 200, 0x00, 0x01, 0x00, 0x01, 0x00};
const unsigned char ubxRate10Hz[] PROGMEM =
    {0x06, 0x08, 0x06, 0x00, 100, 0x00, 0x01, 0x00, 0x01, 0x00};
const unsigned char ubxRate16Hz[] PROGMEM =
    {0x06, 0x08, 0x06, 0x00, 50, 0x00, 0x01, 0x00, 0x01, 0x00};

// Enable specific NMEA sentences
const unsigned char ubxEnableRMC[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxEnableGGA[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxEnableVTG[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00};

// Disable specific NMEA sentences
const unsigned char ubxDisableRMC[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableVTG[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableGGA[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableGSA[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableGSV[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableGLL[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableGST[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableZDA[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableDTM[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableGBS[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableGNS[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableGRS[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
const unsigned char ubxDisableVLW[] PROGMEM =
    {0x06, 0x01, 0x08, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Reset ublox
const unsigned char ubxHotstart[] PROGMEM =
    {0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00}; // 06 04 04 00 00 00 02 00
const unsigned char ubxWarmstart[] PROGMEM =
    {0x06, 0x04, 0x04, 0x00, 0x01, 0x00, 0x02, 0x00}; // 06 04 04 00 01 00 02 00
const unsigned char ubxColdtstart[] PROGMEM =
    {0x06, 0x04, 0x04, 0x00, 0xFF, 0xB9, 0x02, 0x00}; // 06 04 04 00 FF B9 02 00

// Config
const unsigned char ubxRevertDefaultConfig[] PROGMEM =
    {0x06, 0x09, 0x0D, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x03}; // 06 09 0D 00 FF FF 00 00 00 00 00 00 FF FF 00 00 03

// Enable specific UBLOX sentences

const unsigned char ubxEnableTimTP[] PROGMEM =
    {0x06, 0x01, 0x03, 0x00, 0x0D, 0x01, 0x01};
// B5 62 06 01 03 00 0D 01 01 19 69
const unsigned char ubxDisableTimTP[] PROGMEM =
    {0x06, 0x01, 0x03, 0x00, 0x0D, 0x01, 0x00};
// B5 62 06 01 03 00 0D 01 00 18 68
const unsigned char ubxEnablePVT[] PROGMEM =
    {0x06, 0x01, 0x03, 0x00, 0x01, 0x07, 0x01};
// B5 62 06 01 03 00 01 07 01 13 51
const unsigned char ubxDisablePVT[] PROGMEM =
    {0x06, 0x01, 0x03, 0x00, 0x01, 0x07, 0x00};
// B5 62 06 01 03 00 01 07 00 12 50


//  char ubxDisableGGA[] =
//   { 0x06,0x01,0x08,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x01 };
//  char ubxDisableGLL[] =
//   { 0x06,0x01,0x08,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x01 };
//  char ubxDisableGSA[] =
//   { 0x06,0x01,0x08,0x00,0xF0,0x02,0x00,0x00,0x00,0x00,0x00,0x01 };
//  char ubxDisableGSV[] =
//   { 0x06,0x01,0x08,0x00,0xF0,0x03,0x00,0x00,0x00,0x00,0x00,0x01 };
//  char ubxDisableRMC[] =
//   { 0x06,0x01,0x08,0x00,0xF0,0x04,0x00,0x00,0x00,0x00,0x00,0x01 };
//  char ubxDisableVTG[] =
//   { 0x06,0x01,0x08,0x00,0xF0,0x05,0x00,0x00,0x00,0x00,0x00,0x01 };
//  char ubxDisableZDA[] =
//   { 0x06,0x01,0x08,0x00,0xF0,0x08,0x00,0x00,0x00,0x00,0x00,0x01 };

extern bool parseGPScompleted;

extern double distanceToBaseKm;

void sendUBX(const unsigned char *progmemBytes, size_t len);
double haversine(double lat1, double lon1, double lat2, double lon2);
void GPSsetup();
void GPSloop();

#endif //pinconfig_h